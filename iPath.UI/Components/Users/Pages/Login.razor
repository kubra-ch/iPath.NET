@page "/account/login"
@using MediatR
@using iPath.Application.Areas.Authentication
@using iPath.Application.Areas.Authentication.Commands
@using iPath.UI.Areas.Authentication

@inject AuthenticationStateProvider asp
@inject NavigationManager nm
@inject IDialogService srvDialog


<MudCard style="width: 400px;">
    <MudCardHeader>
        <MudText Typo="Typo.h6">Login</MudText>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
            <DataAnnotationsValidator />

            <MudText GutterBottom="true" Typo="Typo.body1">Use a local account to log in.</MudText>

            <MudGrid>
                <MudItem md="12">
                    <MudTextField For="@(() => Input.Username)" @bind-Value="Input.Username" 
                    Label="Username" Placeholder="username" 
                    UserAttributes="@(new() { { "autocomplete", "username" }, { "aria-required", "true" } } )" />
                </MudItem>
                <MudItem md="12">
                    <MudTextField For="@(() => Input.Password)" @bind-Value="Input.Password" 
                    Label="Password" InputType="InputType.Password" Placeholder="password" 
                    UserAttributes="@(new() { { "autocomplete", "current-password" }, { "aria-required", "true" } } )" />
                </MudItem>
                <MudItem md="12">
                    <MudCheckBox For="@(() => Input.RememberMe)" @bind-Value="Input.RememberMe">Remember me</MudCheckBox>
                </MudItem>
            </MudGrid>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" ButtonType="ButtonType.Submit">Log in</MudButton>
        </EditForm>
    </MudCardContent>
    <MudCardActions>
        <MudList T="string">
            <MudListItem>
                <MudLink Href="Account/ForgotPassword">Forgot your password?</MudLink>
            </MudListItem>
            <MudListItem>
                <MudLink Href="Account/Register">Register as a new user</MudLink>
            </MudListItem>
            <MudListItem>
                <MudLink Href="Account/ResendEmailConfirmation">Resend email confirmation</MudLink>
            </MudListItem>
        </MudList>
    </MudCardActions>

    <MudOverlay Visible="processing" DarkBackground="true" Absolute="false">
        loggin in ...
    </MudOverlay>
</MudCard>





@if( !string.IsNullOrEmpty(errMsg) )
{
    <MudAlert Severity="Severity.Error">@errMsg</MudAlert>
}


@code {
    LoginRequest Input = new ();
    string errMsg = "";

    bool processing = false;


    async Task LoginUser()
    {
        try
        {
            processing = true;

            var jwtAsp = (JwtAuthenticationStateProvider)asp;
            var ok = await jwtAsp.Login(Input);

            if( !ok )
            {
               await ShowErrorAsync(jwtAsp.Error);
            }
            else
            {
                nm.NavigateTo("/");
            }
        }
        catch( Exception ex)
        {
            errMsg = ex.Message;
        }
        finally
        {
            processing = false;
        }
    }

    private async Task ShowErrorAsync(string msg)
    {
        bool? result = await srvDialog.ShowMessageBox(
            "Error",
            msg,
            yesText: "Ok");
        StateHasChanged();
    }

}
