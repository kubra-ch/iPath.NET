@page "/account/register"
@using System.ComponentModel.DataAnnotations
@using iPath.UI.Components.Users.ViewModels

@inject UserProfileViewModel vm
@inject IDialogService srvDialog
@inject NavigationManager nm

<h3>Register</h3>

<div style="max-width: 800px">
@if (vm.Model != null)
{
	<MudForm Model="Reg">
		<MudStack>
			<MudText Typo="Typo.h6">User Profile</MudText>
			<MudTextField Label="Username" For="@(() => Reg.Username)" @bind-Value="Reg.Username" />
			<MudTextField Label="Email" For="@(() => Reg.Email)" @bind-Value="Reg.Email" />
			<MudTextField Label="Password" For="@(() => Reg.Password)" @bind-Value="Reg.Password" />
		</MudStack>
	</MudForm>
	
	<div style="margin: 2em; margin-bottom: 2em;">
		<UserProfileForm ViewModel="vm" />
	</div>

	<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSubmit">Register</MudButton>
}
</div>


@code {
	UserRegistrationData Reg = new();


	protected override async Task OnInitializedAsync()
	{
		vm.LoadNewProfileModel();	
	}


	async Task HandleSubmit()
	{
		var resp = await vm.RegisterUser(username: Reg.Username, email: Reg.Email, password: Reg.Password);
		if( resp.Success )
		{
			bool? result = await srvDialog.ShowMessageBox(
				"Congratulations",
				"Your profile has been created. Please continue to login.",
				yesText: "OK");
			nm.NavigateTo("/account/login");
		}
		else
		{
			bool? result = await srvDialog.ShowMessageBox(
				"Warning",
				resp.Message,
				yesText: "OK");
		}
	}

	class UserRegistrationData
	{
		[Required, MinLength(3)]
		public string Username;

		[EmailAddress]
		public string Email;

		[Required, MinLength(4)]
		public string Password;
	}
}
