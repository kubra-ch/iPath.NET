@inherits LayoutComponentBase
@using iPath.UI.Themes
@inject IDataCache srvCache

<MudThemeProvider DefaultScrollbar="true" Theme="iPathThemes.Theme1" IsDarkMode="@appState.DarkTheme" />
<MudPopoverProvider />
<MudDialogProvider FullWidth="false"
        MaxWidth="MaxWidth.Large"
        CloseButton="true"
        BackdropClick="false"
        NoHeader="false"
        Position="DialogPosition.Center"
        CloseOnEscapeKey="true"
        BackgroundClass="ipath_dialogbg" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <NotificationCenter />
                <div style="margin-left: 20px;"> </div>
                <PersonaButton Profile="@profile" />
            </Authorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent MaxWidth="MaxWidth.Medium">
        <BreadCrumbView />
        <div class="ipath_maincontent">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    CascadingAppState appState { get; set; }

    UserProfile profile = default;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if( firstRender &&  appState.SessionUser?.UserId > 0)
        {
            profile = await srvCache.GetProfileAsync(appState.SessionUser.UserId);
            StateHasChanged();
        }
    }


    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}