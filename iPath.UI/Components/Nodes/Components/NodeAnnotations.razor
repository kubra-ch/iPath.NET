@using iPath.UI.Components.Nodes.ViewModels

@if (vm.Model != null)
{
	<div class="ipath_section_header">
		<div class="ipath_header_title">Annotations</div>
		<div class="ipath_header_actions">
			<MudTooltip Text="Add Annotation">
				<MudIcon Size="Size.Small" Icon=@SortIcon @onclick="ToggleSort" />
				<MudIcon Size="Size.Small" Icon="@Icons.Material.Rounded.Add" @onclick="AddAnnotation" />
			</MudTooltip>
		</div>
	</div>


	<div class="ipath_annotations">
		@foreach (var a in vm.Model.Annotations.OrderByDirection(Sort, a => a.CreatedOn) )
		{
			<AnnotationItemView Item="a" OnDelete="@OnDelete" />
		}
	</div>
}

@code {
	[Parameter]
	public NodeDetailViewModel vm { get; set; }


	async Task OnDelete(AnnotationModel item)
	{
		await vm.DeleteAnnotation(item);
		await vm.ReloadNodeAsync();
	}


	private SortDirection Sort = SortDirection.Ascending;
	string SortIcon => Sort == SortDirection.Ascending ? Icons.Material.Filled.KeyboardDoubleArrowUp : Icons.Material.Filled.KeyboardDoubleArrowDown;
	void ToggleSort()
	{
		Sort = (Sort == SortDirection.Ascending) ? SortDirection.Descending : SortDirection.Ascending;
	}


	async Task AddAnnotation()
	{
		await vm.ShowNewAnnotationDialog();
	}

}
